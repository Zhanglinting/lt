<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
    "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
 
<mapper namespace="dao.NoteDao">
  <select id="findNotesByNotebookId" parameterType="string" resultType="map">
      select
        cn_note_id id,
        cn_note_title title
      from cn_note
      where cn_notebook_id=#{notebookId} AND cn_note_status_id="1"
      order by 
            cn_note_last_modify_time desc
  </select>
   <select id="findNotes"  resultType="map">
      select
        cn_note_id id,
        cn_note_title title
      from cn_note
      where cn_note_status_id="2"
      order by 
            cn_note_last_modify_time desc
  </select>
  <select id="findNoteById" parameterType="string" resultType="entity.Note">
    SELECT
      cn_note_id id,
      cn_notebook_id notebookId,
      cn_user_id userId,
      cn_note_status_id statusId,
      cn_note_type_id typeId,
      cn_note_title title,
      cn_note_body body,
      cn_note_create_time createtime,
      cn_note_last_modify_time lastmodifytime
    FROM
      cn_note
    WHERE
      cn_note_id=#{id}
  </select>
  <update id="updateNote" parameterType="map">
     UPDATE
        cn_note
    <!-- SET -->
    <set>
       <trim suffixOverrides=",">
         <if test="notebookId != null">
           cn_notebook_id=#{notebookId},
         </if>
         <if test="title != null">
           cn_note_title=#{title},
         </if>
         <if test="body!=null">
           cn_note_body=#{body},
         </if>
         <if test="userId!=null">
           cn_user_id=#{userId},
         </if>
         <if test="statusId!=null">
           cn_note_status_id=#{statusId},
         </if>
         <if test="typeId!=null">
           cn_note_type_id=#{typeId},
         </if>
         <if test="lastModifyTime != null">
            cn_note_last_modify_time=#{lastModifyTime}
         </if>
      </trim>
     </set>
  <!-- WHERE -->
     <where>
        cn_note_id=#{id}
     </where>
       
  </update>
  <insert id="addNote" parameterType="entity.Note">
    INSERT INTO cn_note(
      cn_note_id,
      cn_notebook_id ,
      cn_user_id ,
      cn_note_status_id ,
      cn_note_type_id ,
      cn_note_title ,
      cn_note_body ,
      cn_note_create_time ,
      cn_note_last_modify_time
   ) VALUES
    (#{id},#{notebookId},#{userId},#{statusId},#{typeId},#{title},#{body},#{createtime},#{lastmodifytime})
  </insert>
  <delete id="deleteNoteById" parameterType="string">
     DELETE FROM
        cn_note
     WHERE
    
        cn_note_id=#{id}
  </delete>
  <select id="findNotesByParam" parameterType="map" resultType="map">
    SELECT
        cn_note_id id,
        cn_note_title title,
        cn_note_body body
    FROM
        cn_note 
    WHERE
         <choose>
              <when test="key!=null">
                  cn_note_title like #{key} and
                  cn_note_body  like #{key}
              </when>
              <when test="title!=null">
                  cn_note_title like #{title}
              </when>
              <when test="body!=null">
                  cn_note_body  like #{body}
              </when>
         </choose>
    ORDER BY
        cn_note_last_modify_time desc
  </select>
  <delete id="deleteNotes" parameterType="map">
    DELETE FROM
      cn_note
    WHERE
      cn_note_id in
      <foreach collection="idList" item="id" open="(" separator="," close=")">
         #{id}
      </foreach>
      <!--foreach拼接结果: (id1,id2,id3,...) -->
      ;<!-- 异常查看SQL语句,最后要删了; -->
  </delete>
  <select id="findNoteByParam" parameterType="map" resultType="map">
     SELECT
        cn_note_id id,
        cn_note_title title,
        cn_note_body body
     FROM
        cn_note
     <where>
         <if test="statusId!=null">
           cn_note_status_id=#{statusId}
         </if>
     </where>
     limit
       #{start},#{length} 
  </select>
</mapper>  





